{"version":3,"sources":["components/app-info/app-info.js","components/search-panel/search-panel.js","components/app-filter/app-filter.js","components/employees-list-item/employees-list-item.js","components/employees-list/employees-list.js","components/employees-add-form/employees-add-form.js","components/app/app.js","index.js"],"names":["AppInfo","_ref","increased","employees","React","createElement","className","SearchPanel","Component","constructor","props","super","onUpdateSearch","e","term","target","value","this","setState","state","render","type","placeholder","onChange","AppFilter","filter","onFilterSelect","buttons","name","label","map","_ref2","clazz","concat","key","onClick","EmployeesListItem","salary","onDelete","onToggleProp","onChangeSalary","isIncrease","rise","classNames","data-toggle","defaultValue","EmployeesList","data","elements","item","id","itemProps","Object","assign","currentTarget","getAttribute","parseInt","EmployeesAddForm","onValueChange","onSubmit","preventDefault","onAdd","App","deleteItem","addItem","trim","alert","isNaN","newItem","increase","maxId","prop","_ref3","searchEmp","items","length","indexOf","toUpperCase","filterEmp","_ref4","visibleData","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.4f4b9daa.chunk.js","sourcesContent":["import React from 'react';\nimport './app-info.css';\n\nconst AppInfo = ({increased, employees}) => {\n    return (\n        <div className=\"app-info\">\n            <h1>Учет сотрудников в компании N</h1>\n            <h2>Общее количество сотрудников: {employees}</h2>\n            <h2>Премию получат: {increased}</h2>\n        </div>\n    )\n}\n\nexport default AppInfo;","import React, { Component } from 'react';\n\nimport './search-panel.css';\n\nclass SearchPanel extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            term: ''\n        }\n    }\n\n    onUpdateSearch = (e) => {\n        const term = e.target.value;\n        this.setState({term});\n        this.props.onUpdateSearch(term);\n    }\n    render() {\n        return (\n            <input\n                type=\"text\"\n                className=\"form-control search-input\"\n                placeholder=\"Найти сотрудника\"\n                value={this.state.term}\n                onChange={this.onUpdateSearch}/>\n        )\n    }\n\n}\n\nexport default SearchPanel;","import React from 'react';\n\nimport './app-filter.css';\n\nconst AppFilter = ({ filter, onFilterSelect }) => {\n\n    const buttonData = [\n        {name: 'all', label: 'Все сотрудники'},\n        {name: 'rise', label: 'На повышение'},\n        {name: 'over-1000', label: 'З/П больше 1000$'}\n    ]\n\n    const buttons = buttonData.map(({name, label}) => {\n        const active = filter === name;\n        const clazz = active ? 'btn-light' : 'btn-outline-light';\n        return (\n            <button type=\"button\"\n                    className={`btn ${clazz}`}\n                    key={name}\n                    onClick={() => onFilterSelect(name)}>\n                    {label}\n            </button>\n        )\n    })\n\n    return (\n        <div className=\"btn-group\">\n            {buttons}\n        </div>\n    )\n\n}\n\nexport default AppFilter;\n\n","import React from 'react';\nimport './employees-list-item.scss';\n\nconst EmployeesListItem = (props) => {\n\n    const {name, salary, onDelete, onToggleProp, onChangeSalary, isIncrease, rise} = props;\n\n    \n    let classNames = \"list-group-item d-flex justify-content-between\";\n    if (isIncrease) {\n        classNames += \" increase\"\n    }\n\n    if (rise) {\n        classNames += \" like\";\n    }\n\n\n    return (\n        <li className={classNames}>\n            <span onClick={onToggleProp} data-toggle=\"rise\" className=\"list-group-item-label\">{name}</span>\n            <input type=\"text\" className=\"list-group-item-input\" onChange={onChangeSalary} defaultValue={salary + \"$\"}/>\n            <div className=\"d-flex justify-content-center align-items-center\">\n                <button type=\"button\" \n                        className=\"btn-cookie btn-sm\"\n                        onClick={onToggleProp} data-toggle=\"isIncrease\">\n                        <i className=\"fas fa-cookie\"></i>\n                </button>\n\n                <button  type=\"button\" \n                        className=\"btn-trash btn-sm\"\n                        onClick={onDelete}>\n                        <i className=\"fas fa-trash\"></i>\n                </button>\n                <i className=\"fas fa-star\"></i>\n            </div>\n        </li>\n    )\n}\n\nexport default EmployeesListItem;","import React from 'react';\nimport EmployeesListItem from \"../employees-list-item/employees-list-item\"\nimport './employees-list.css'\n\nconst EmployeesList = ({data, onDelete, onToggleProp, onChangeSalary}) => {\n\n    const elements = data.map(item => {\n        const {id, ...itemProps} = item;\n        return (\n            <EmployeesListItem \n            key={id} \n            {...itemProps}\n            onDelete={() => onDelete(id)}\n            onToggleProp={(e) => onToggleProp(id, e.currentTarget.getAttribute('data-toggle'))}\n            onChangeSalary={(e) => onChangeSalary(id, parseInt(e.target.value))}/>\n        )\n    })\n\n    return (\n        <ul className=\"app-list list-group\">\n            {elements}\n        </ul>\n    )\n}\n\nexport default EmployeesList; ","import React, { Component } from 'react';\nimport './employees-add-form.scss';\n\nclass EmployeesAddForm extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            salary: ''\n        }\n    }\n\n    onValueChange = (e) => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onAdd(this.state.name, this.state.salary);\n        this.setState({\n            name: '',\n            salary: ''\n        })\n    }\n\n    render() {\n        const {name, salary} = this.state;\n        return (\n            <div className=\"app-add-form\">\n                <h3>Добавьте нового сотрудника</h3>\n                <form\n                    className=\"add-form d-flex\"\n                    onSubmit={this.onSubmit}>\n                    <input type=\"text\"\n                            className=\"form-control new-post-label\"\n                            placeholder=\"Как его зовут?\"\n                            name=\"name\"\n                            value={name}\n                            onChange={this.onValueChange}/>\n\n                    <input type=\"number\"\n                           className=\"form-control new-post-label\"\n                           placeholder=\"З/П в $?\"\n                           name=\"salary\"\n                           value={salary}\n                           onChange={this.onValueChange}/>\n\n                    <button type=\"submit\"\n                             className=\"btn btn-outline-light\">Добавить</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default EmployeesAddForm;","import React from 'react';\nimport { Component } from 'react';\n\nimport AppInfo from '../app-info/app-info';\nimport SearchPanel from '../search-panel/search-panel';\nimport AppFilter from '../app-filter/app-filter';\nimport EmployeesList from '../employees-list/employees-list';\nimport EmployeesAddForm from '../employees-add-form/employees-add-form';\n\nimport './app.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data : [\n                {name: \"Rakhymzhan\", salary: 800, isIncrease: true, rise: false, id: 1},\n                {name: \"Omirzhan\", salary: 3000, isIncrease: false, rise: false, id: 2},\n                {name: \"Zhanar\", salary: 25000, isIncrease: false, rise: false, id: 3}\n            ],\n            term: '',\n            filter: ''\n        };\n        this.maxId = 4;\n    }\n\n    deleteItem = (id) => {\n\n        this.setState(({data}) => {\n\n            return {\n                data: data.filter(item => item.id !== id)\n            }\n        })\n    }\n\n    addItem = (name, salary) => {\n\n        if (!name || name.trim() === \"\") {\n            alert(\"Name cannot be empty\");\n            return;\n        }\n    \n        if (!salary || isNaN(salary) || salary <= 0) {\n            alert(\"Salary must be a positive number\");\n            return;\n        }\n        \n        const newItem = {\n            name,\n            salary,\n            increase: false,\n            rise: false,\n            id: this.maxId++\n        }\n\n        this.setState(({data}) => {\n            const newArr = [...data, newItem];\n            return {\n                data: newArr\n            }\n        });\n    }\n\n    onToggleProp = (id, prop) => {\n        this.setState(({data}) => ({\n            data: data.map(item => {\n                if (item.id === id) {\n                    return {...item, [prop]: !item[prop]}\n                }\n                return item;\n            })\n        }))\n    }\n\n    searchEmp = (items, term) => {\n        if (term.length === 0) {\n            return items;\n        }\n\n        return items.filter(item => {\n            return item.name.indexOf(term.toUpperCase()) > -1;\n        })\n    }\n\n    onUpdateSearch = (term) => {\n        this.setState({term})\n    }\n\n    filterEmp = (items, filter) => {\n        switch(filter) {\n            case 'rise':\n                return items.filter(item => item.rise);\n            case 'over-1000':\n                return items.filter(item => item.salary > 1000);\n            default:\n                return items;\n        }\n    }\n\n    onFilterSelect = (filter) => {\n        this.setState({filter});\n    }\n\n    onChangeSalary = (id, salary) => {\n        this.setState(({ data }) => ({\n            data: data.map(item => {\n                if (item.id === id) {\n                    return {...item, salary }\n                }\n                return item;\n            })\n        }))\n    }\n\n\n    render() {\n        const {data, term, filter} = this.state;\n        const employees = this.state.data.length\n        let increased = this.state.data.filter(item => item.rise).length;\n        const visibleData = this.filterEmp(this.searchEmp(data, term), filter);\n        return (\n            <div className=\"app\">\n                <AppInfo employees={employees}\n                         increased={increased}/>\n\n                <div className=\"search-panel\">\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch}/>\n                    <AppFilter filter={filter} onFilterSelect={this.onFilterSelect}/>\n                </div>\n\n                <EmployeesList \n                data={visibleData}\n                onDelete={this.deleteItem}\n                onToggleProp={this.onToggleProp}\n                onChangeSalary={this.onChangeSalary}/>\n                <EmployeesAddForm onAdd={this.addItem}/>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/app/app';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <StrictMode>\n      <App />\n  </StrictMode>\n\n);\n\n\n"],"sourceRoot":""}